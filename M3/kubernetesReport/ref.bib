%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/



@misc{clark_jdepend_2023,
	title = {{JDepend}},
	copyright = {MIT},
	url = {https://github.com/clarkware/jdepend},
	abstract = {A Java package dependency analyzer that generates design quality metrics.},
	urldate = {2023-03-20},
	author = {Clark, Mike},
	month = mar,
	year = {2023},
	note = {original-date: 2008-08-21T21:34:50Z},
}

@misc{the_linux_foundation_secrets_2024,
	title = {Secrets},
	url = {https://kubernetes.io/docs/concepts/configuration/secret/},
	abstract = {A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in a container image. Using a Secret means that you don't need to include confidential data in your application code.
	Because Secrets can be created independently of the Pods that use them, there is less risk of the Secret (and its data) being exposed during the workflow of creating, viewing, and editing Pods.},
	language = {en},
	urldate = {2024-11-17},
	journal = {Kubernetes},
	author = {{The Linux Foundation}},
	year = {2024},
	note = {Section: docs}
}


@misc{the_linux_foundation_encrypting_2024,
	title = {Encrypting {Confidential} {Data} at {Rest}},
	url = {https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/},
	abstract = {All of the APIs in Kubernetes that let you write persistent API resource data support at-rest encryption. For example, you can enable at-rest encryption for Secrets. This at-rest encryption is additional to any system-level encryption for the etcd cluster or for the filesystem(s) on hosts where you are running the kube-apiserver.
	This page shows how to enable and configure encryption of API data at rest.
	Note:This task covers encryption for resource data stored using the Kubernetes API.},
	language = {en},
	urldate = {2024-11-17},
	journal = {Kubernetes},
	author = {{The Linux Foundation}},
	year = {2024},
	note = {Section: docs}
}


@book{gkatziouras_kubernetes_2024,
	address = {Place of publication not identified},
	title = {Kubernetes secrets handbook: design, implement, and maintain production-grade {Kubernetes} {Secrets} management solutions},
	isbn = {978-1-80512-322-4 978-1-80512-715-4},
	shorttitle = {Kubernetes secrets handbook},
	abstract = {Gain hands-on skills in Kubernetes Secrets management, ensuring a comprehensive overview of the Secrets lifecycle and prioritizing adherence to regulatory standards and business sustainability Key Features Master Secrets encryption, encompassing complex life cycles, key rotation, access control, backup, and recovery Build your skills to audit Secrets consumption, troubleshoot, and optimize for efficiency and compliance Learn how to manage Secrets through real-world cases, strengthening your applications' security posture Purchase of the print or Kindle book includes a free PDF eBook Book Description Securing Secrets in containerized apps poses a significant challenge for Kubernetes IT professionals. This book tackles the critical task of safeguarding sensitive data, addressing the limitations of Kubernetes encryption, and establishing a robust Secrets management system for heightened security for Kubernetes. Starting with the fundamental Kubernetes architecture principles and how they apply to the design of Secrets management, this book delves into advanced Kubernetes concepts such as hands-on security, compliance, risk mitigation, disaster recovery, and backup strategies. With the help of practical, real-world guidance, you'll learn how to mitigate risks and establish robust Secrets management as you explore different types of external secret stores, configure them in Kubernetes, and integrate them with existing Secrets management solutions. Further, you'll design, implement, and operate a secure method of managing sensitive payload by leveraging real use cases in an iterative process to enhance skills, practices, and analytical thinking, progressively strengthening the security posture with each solution. By the end of this book, you'll have a rock-solid Secrets management solution to run your business-critical applications in a hybrid multi-cloud scenario, addressing operational risks, compliance, and controls. What you will learn Explore Kubernetes Secrets, related API objects, and CRUD operations Understand the Kubernetes Secrets limitations, attack vectors, and mitigation strategies Explore encryption at rest and external secret stores Build and operate a production-grade solution with a focus on business continuity Integrate a Secrets Management solution in your CI/CD pipelines Conduct continuous assessments of the risks and vulnerabilities for each solution Draw insights from use cases implemented by large organizations Gain an overview of the latest and upcoming Secrets management trends Who this book is for This handbook is a comprehensive reference for IT professionals to design, implement, operate, and audit Secrets in applications and platforms running on Kubernetes. For developer, platform, and security teams experienced with containers, this Secrets management guide offers a progressive path--from foundations to implementation--with a security-first mindset. You'll also find this book useful if you work with hybrid multi-cloud Kubernetes platforms for organizations concerned with governance and compliance requirements},
	language = {en},
	publisher = {Packt Publishing},
	author = {Gkatziouras, Emmanouil and Adams, Rom and Xi, Chen and Jenkins, Chris},
	year = {2024},
	file = {PDF:/home/luis/Zotero/storage/PPA24XE5/Gkatziouras et al. - 2024 - Kubernetes secrets handbook design, implement, and maintain production-grade Kubernetes Secrets man.pdf:application/pdf},
}

